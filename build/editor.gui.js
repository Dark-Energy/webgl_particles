var Editor_Gui=function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=5)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return Color_Picker});var Color_Picker={props:{value:{type:Object,default:function(){return{r:0,g:0,b:0}}}},template:'<div>    <p>Red Green Blue Color    <p>    <input type="range" min="0" max="255" @change="changed" :value="value.r" ref="r" id="r" >    <input type="range" min="0" max="255" @change="changed" :value="value.g" ref="g" id="g">    <input type="range" min="0" max="255" @change="changed" :value="value.b" ref="b" id="b">    </div>',data:function(){return{new_value:{r:0,g:0,b:0}}},methods:{changed:function(event){this.value[event.target.id]=event.target.value;this.$emit("input",this.value)}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return Particles_Panel});var __WEBPACK_IMPORTED_MODULE_0__particles_props_js__=__webpack_require__(2);var __WEBPACK_IMPORTED_MODULE_1__texture_panel_js__=__webpack_require__(3);var Particles_Panel={props:{particles:{type:Object,default:function(){return[]}},textures:{type:Object,default:function(){return[]}},selected:{type:String,default:""}},data:function(){return{first_time:true,particle_params:{},my_selected:false,texture_panel_is_visible:false}},methods:{add_to_select:function(id){this.particles.push(id);this.my_selected=id},create_particles:function(){event_hub.$emit("create_particles")},remove_particles:function(event){event_hub.$emit("remove_particles",this.my_selected);for(var i=0;i<this.particles.length;i++){if(this.particles[i]==this.my_selected){this.particles.splice(i,1);if(this.particles.length>0){if(i+1<this.particles.length){this.my_selected=this.particles[i+1]}else{this.my_selected=this.particles[0]}}else{this.my_selected=""}break}}},change_colors:function(event){event_hub.$emit("change_particles_color",this.my_selected,event)},show_texture_panel:function(event){this.texture_panel_is_visible=!this.texture_panel_is_visible},select_particles:function(event){this.particle_params=event_hub.get_particle_params(this.my_selected)},play:function(event){event_hub.$emit("replay",this.my_selected,this.particle_params)}},created:function(){var self=this;event_hub.$on("adding_particles",function(id){self.add_to_select(id)});if(!!this.selected){this.my_selected=this.selected}else{if(this.particles.length>0){this.my_selected=this.particles[0]}}if(this.my_selected){this.particle_params=event_hub.get_particle_params(this.my_selected)}},watch:{particles:function(arr){if(this.particles.length>0){if(this.first_time){this.my_selected=this.particles[0];this.first_time=false}}},my_selected:function(new_selected){this.particle_params=event_hub.get_particle_params(this.my_selected)}},template:'<div>\t<button type="button" id="btn-add" v-on:click="create_particles">New</button>\t<br>\t<select v-model="my_selected" id="object-list" ref="particles_list">\t\t<option disabled value="">Please select one</option>\t  <option v-for="option in particles" v-bind:value="option">\t\t{{ option }}\t  </option>\t</select>\t<br>    <span>Selected: {{ my_selected }}</span><br>        <button type="button" id="btn-play" v-on:click="play">Refresh</button>        <button type="button" id="btn-remove" v-on:click="remove_particles">Remove</button>    <p>  <span class="info-panel">Particles properties</span></p>    <div class="particles-properties">        <div v-if="my_selected" >            <ParticlesProps  :params="particle_params" />            <a href="javascript:void(0)" @click="show_texture_panel">Show texture panel</a>            <div class="dummy" v-if="texture_panel_is_visible">            <texture-panel :textures="textures" :object_id="my_selected" :selected="particle_params.texture"/>            </div>        </div>    </div>    </div>',components:{ParticlesProps:__WEBPACK_IMPORTED_MODULE_0__particles_props_js__["a"],"texture-panel":__WEBPACK_IMPORTED_MODULE_1__texture_panel_js__["a"]}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return Particles_Props});var __WEBPACK_IMPORTED_MODULE_0__color_picker_js__=__webpack_require__(0);var Blending_Selector={props:{blending:{type:String,required:true,default:"no"}},template:'<select v-model="blending" id="blending" v-on:change="select">            <option value="no">no</option>            <option value="additive">additive</option>            <option value="one_alpha">one, minus src alpha</option>            <option value="alpha_one">minus src alpha, one</option>            <option value="alpha">alpha</option>        </select>',methods:{select:function(event){this.$emit("change",this.blending)}}};var Behavior={props:["affect_method","emit_method"],data:function(){return{behavior:false}},template:'<div>    <button type="button" @click="show_behavior">Show Behaviour</button>    <div class="behavior" v-if="behavior">    <p>affect method<br>    <textarea v-model="affect_method"></textarea>    <p>emit method<br>    <textarea v-model="emit_method"></textarea>    </div>',methods:{show_behavior:function(f){var behavior=!this.behavior;this.behavior=behavior}}};var Particle_Params={props:{params:{type:Object,default:function(){return{}}}},template:'<div @keyup.13="fire">        <div class="prop-column">            Life Length: <br/>            <input type="text" id="life_length" v-model.number="params.life_length" type="number" step="0.1" />        </div>        <div class="prop-column">            Emit per second <br/>            <input type="text" id="emit_per_second" v-model.number="params.emit_per_second" type="number" />        </div>        <div class="prop-column">            Number of particles<br/>            <input type="text" id="count" v-model.number="params.count" type="number" />        </div>        <div class="prop-column">            Point Size<br/>            <input type="text" id="size" v-model.number="params.size" type="number" step="0.1" />        </div></div>',methods:{fire:function(event){this.$parent.fire(event)}}};var Particles_Props={props:{params:{type:Object,default:function(){return{}}}},template:'<div>  <particle-params :params=params />        <color-picker :value="params.color" @input="update_color"></color-picker>        <p>Blending mode</p>            <blending-mode :blending=params.blending @change="blending_change"> </blending-mode>        <p>Precomputed alpha <input type="checkbox" v-model="params.precomputed_alpha" @change="fire" id="pre_alpha"></p>        <behavior :affect_method=params.affect_method :emit_method=params.emit_method />    <div>',data:function(){return{behavior:false}},watch:{params:function(){}},methods:{blending_change:function(event){this.params.blending=event;this.emit_param_change("blending",event)},emit_param_change:function(key,value){var params={};params[key]=value;event_hub.$emit("change_params",this.params.id,params)},fire:function(event){var value=event.target.type==="checkbox"?event.target.checked:event.target.value;this.emit_param_change(event.target.id,value)},update_color:function(event){event_hub.$emit("change_color",this.params.id,event)}},components:{"color-picker":__WEBPACK_IMPORTED_MODULE_0__color_picker_js__["a"],"blending-mode":Blending_Selector,behavior:Behavior,"particle-params":Particle_Params}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return Texture_Panel});var Texture_Panel={template:'<div class="texture-panel">            <div class="high-tools-panel">            <select id="texture_select" v-model="selected" v-on:change="choose_texture">            <option v-for="option in textures" v-bind:value="option">                {{ option }}            </option>            </select>            <button type="button" v-on:click="apply">apply</button>            </div>            <div class="texture-canvas">            <canvas id="texture-canvas-obj" class="texture-canvas" ref="canvas">            </canvas>            </div>            <div class="texture-info">                Texture Format  {{format}} <br />                Texture Width {{texture_width}} Height {{texture_height}}            </div>            <div class="clear" />        </div>',props:["textures","selected","object_id"],data:function(){return{selected_texture:"",texture_width:0,texture_height:0,format:"",panel_visible:false,selected:""}},methods:{show_panel:function(event){this.panel_visible=!this.panel_visible},choose_texture:function(event){this.selected=event.target.value;this.selected_texture=this.selected;this.draw_texture(this.selected_texture)},apply:function(){event_hub.$emit("select_texture",this.object_id,this.selected_texture)},draw_texture:function(name){if(!name)return;var texture=event_hub.get_texture(name);if(!texture){console.error("Oh, Fuck! Texture "+name+" not found!");return}this.format=texture_format_to_string(texture.format);var image=texture.image;this.texture_width=image.naturalWidth||image.width;this.texture_height=image.naturalHeight||image.height;var canvas=this.$refs["canvas"];my_draw_image(canvas,image,0,0)},get_texture_from_particles:function(id){if(!id){return}this.selected_texture=event_hub.get_texture_from_particles(id);this.draw_texture(this.selected_texture)}},mounted:function(){this.get_texture_from_particles(this.object_id)},watch:{object_id:function(value){this.get_texture_from_particles(value)}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return create_vue_app});var __WEBPACK_IMPORTED_MODULE_0__particles_panel_js__=__webpack_require__(1);function create_vue_app(id){var app2=new Vue({el:id,components:{"particles-panel":__WEBPACK_IMPORTED_MODULE_0__particles_panel_js__["a"]},data:{particles:[],textures:[]},template:'<div id="app">            <particles-panel :particles="particles" :textures="textures"></particles-panel>            </div>'});return app2}},function(module,__webpack_exports__,__webpack_require__){"use strict";Object.defineProperty(__webpack_exports__,"__esModule",{value:true});var __WEBPACK_IMPORTED_MODULE_0__gui_vueapp_js__=__webpack_require__(4);__webpack_require__.d(__webpack_exports__,"create_vue_app",function(){return __WEBPACK_IMPORTED_MODULE_0__gui_vueapp_js__["a"]});var __WEBPACK_IMPORTED_MODULE_1__gui_color_picker_js__=__webpack_require__(0);__webpack_require__.d(__webpack_exports__,"Color_Picker",function(){return __WEBPACK_IMPORTED_MODULE_1__gui_color_picker_js__["a"]});var __WEBPACK_IMPORTED_MODULE_2__gui_texture_panel_js__=__webpack_require__(3);__webpack_require__.d(__webpack_exports__,"Texture_Panel",function(){return __WEBPACK_IMPORTED_MODULE_2__gui_texture_panel_js__["a"]});var __WEBPACK_IMPORTED_MODULE_3__gui_particles_props_js__=__webpack_require__(2);__webpack_require__.d(__webpack_exports__,"Particles_Props",function(){return __WEBPACK_IMPORTED_MODULE_3__gui_particles_props_js__["a"]});var __WEBPACK_IMPORTED_MODULE_4__gui_particles_panel_js__=__webpack_require__(1);__webpack_require__.d(__webpack_exports__,"Particles_Panel",function(){return __WEBPACK_IMPORTED_MODULE_4__gui_particles_panel_js__["a"]})}]);
//# sourceMappingURL=editor.gui.js.map