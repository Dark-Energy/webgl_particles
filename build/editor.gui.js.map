{"version":3,"sources":["webpack:///editor.gui.js","webpack:///webpack/bootstrap f013b1b4dd34c061c253","webpack:///./src/gui/color_picker.js","webpack:///./src/gui/particles_panel.js","webpack:///./src/gui/particles_props.js","webpack:///./src/gui/texture_panel.js","webpack:///./src/gui/vueapp.js","webpack:///./src/gui_main_webpack.js"],"names":["Editor_Gui","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","Color_Picker","props","type","default","r","g","b","template","data","new_value","changed","methods","event","this","target","id","$emit","Particles_Panel","__WEBPACK_IMPORTED_MODULE_0__particles_props_js__","__WEBPACK_IMPORTED_MODULE_1__texture_panel_js__","textures","selected","String","first_time","texture_panel_is_visible","add_to_select","my_selected","create_particles","event_hub","remove_particles","push","particles","length","change_colors","show_texture_panel","particle_params","select_particles","get_particle_params","play","self","created","$on","arr","watch","new_selected","components","ParticlesProps","texture-panel","Behavior","Particles_Props","__WEBPACK_IMPORTED_MODULE_0__color_picker_js__","Blending_Selector","required","blending","behavior","show_behavior","f","Particle_Params","fire","$parent","params","selected_texture","texture_width","texture_height","panel_visible","key","show_panel","checked","update_color","blending-mode","draw_texture","particle-params","canvas","Texture_Panel","format","choose_texture","apply","object_id","texture","get_texture","console","error","texture_format_to_string","image","naturalWidth","width","naturalHeight","height","$refs","my_draw_image","get_texture_from_particles","mounted","create_vue_app","__WEBPACK_IMPORTED_MODULE_0__particles_panel_js__","app2","Vue","el","particles-panel","__WEBPACK_IMPORTED_MODULE_0__gui_vueapp_js__","__WEBPACK_IMPORTED_MODULE_1__gui_color_picker_js__","__WEBPACK_IMPORTED_MODULE_2__gui_texture_panel_js__","__WEBPACK_IMPORTED_MODULE_3__gui_particles_props_js__","__WEBPACK_IMPORTED_MODULE_4__gui_particles_panel_js__"],"mappings":"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","file":"editor.gui.js","sourcesContent":["var Editor_Gui =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Color_Picker; });\n\nvar Color_Picker = {\n    props: {\n        value: {\n            type: Object,\n            default: function () {\n                return { r: 0, g: 0, b: 0 };\n            }\n        }\n    },\n    template: '<div>\\\r\n    <p>Red Green Blue Color\\\r\n    <p>\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.r\" ref=\"r\" id=\"r\" >\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.g\" ref=\"g\" id=\"g\">\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.b\" ref=\"b\" id=\"b\">\\\r\n    </div>',\n    data: function () {\n        return {\n            new_value: {\n                r: 0,\n                g: 0,\n                b: 0\n            }\n        };\n    },\n    methods: {\n        changed: function (event) {\n            this.value[event.target.id] = event.target.value;\n            this.$emit('input', this.value);\n        }\n    }\n};\n\n//Vue.component(\"color-picker\", Color_Picker);\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Particles_Panel; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__particles_props_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__texture_panel_js__ = __webpack_require__(3);\n\n\n\nvar Particles_Panel = {\n    props: {\n        particles: {\n            type: Object,\n            default: function () {\n                return [];\n            }\n        },\n        textures: {\n            type: Object,\n            default: function () {\n                return [];\n            }\n        },\n        selected: {\n            type: String,\n            default: ''\n        }\n    },\n    data: function () {\n\n        return {\n            first_time: true,\n            particle_params: {},\n            my_selected: false,\n            texture_panel_is_visible: false\n        };\n    },\n    methods: {\n        add_to_select: function (id) {\n            //console.log(\"select new \", id, this.particles);\n            this.particles.push(id);\n            this.my_selected = id;\n        },\n        create_particles: function () {\n            event_hub.$emit(\"create_particles\");\n        },\n        remove_particles: function (event) {\n            event_hub.$emit(\"remove_particles\", this.my_selected);\n            for (var i = 0; i < this.particles.length; i++) {\n                if (this.particles[i] == this.my_selected) {\n                    this.particles.splice(i, 1);\n                    //selecte next available particles or empty\n                    if (this.particles.length > 0) {\n                        if (i + 1 < this.particles.length) {\n                            this.my_selected = this.particles[i + 1];\n                        } else {\n                            this.my_selected = this.particles[0];\n                        }\n                    } else {\n                        this.my_selected = '';\n                    }\n\n                    break;\n                }\n            }\n        },\n\n        change_colors: function (event) {\n            event_hub.$emit(\"change_particles_color\", this.my_selected, event);\n        },\n\n        show_texture_panel: function (event) {\n            this.texture_panel_is_visible = !this.texture_panel_is_visible;\n            //console.log(\"this \", this.texture_panel_is_visible);\n        },\n\n        select_particles: function (event) {\n            this.particle_params = event_hub.get_particle_params(this.my_selected);\n        },\n        play: function (event) {\n            event_hub.$emit(\"replay\", this.my_selected, this.particle_params);\n        }\n\n    },\n    created: function () {\n\n        var self = this;\n        event_hub.$on(\"adding_particles\", function (id) {\n            self.add_to_select(id);\n        });\n\n        if (!!this.selected) {\n            this.my_selected = this.selected;\n        } else {\n            if (this.particles.length > 0) {\n                this.my_selected = this.particles[0];\n            }\n        }\n        if (this.my_selected) {\n            this.particle_params = event_hub.get_particle_params(this.my_selected);\n        }\n    },\n\n    watch: {\n        particles: function (arr) {\n            //console.log(\"watch particles\", arr);\n            if (this.particles.length > 0) {\n                if (this.first_time) {\n                    this.my_selected = this.particles[0];\n                    this.first_time = false;\n                }\n            }\n        },\n        my_selected: function (new_selected) {\n            //console.log(\"watch new selected\", new_selected);\n            this.particle_params = event_hub.get_particle_params(this.my_selected);\n        }\n    },\n\n    template: '<div>\\\r\n\t<button type=\"button\" id=\"btn-add\" v-on:click=\"create_particles\">New</button>\\\r\n\t<br>\\\r\n\t<select v-model=\"my_selected\" id=\"object-list\" ref=\"particles_list\">\\\r\n\t\t<option disabled value=\"\">Please select one</option>\\\r\n\t  <option v-for=\"option in particles\" v-bind:value=\"option\">\\\r\n\t\t{{ option }}\\\r\n\t  </option>\\\r\n\t</select>\\\r\n\t<br>\\\r\n    <span>Selected: {{ my_selected }}</span><br>\\\r\n        <button type=\"button\" id=\"btn-play\" v-on:click=\"play\">Refresh</button>\\\r\n        <button type=\"button\" id=\"btn-remove\" v-on:click=\"remove_particles\">Remove</button>\\\r\n    <p>  <span class=\"info-panel\">Particles properties</span></p>\\\r\n    <div class=\"particles-properties\">\\\r\n        <div v-if=\"my_selected\" >\\\r\n            <ParticlesProps  :params=\"particle_params\" />\\\r\n            <a href=\"javascript:void(0)\" @click=\"show_texture_panel\">Show texture panel</a>\\\r\n            <div class=\"dummy\" v-if=\"texture_panel_is_visible\">\\\r\n            <texture-panel :textures=\"textures\" :object_id=\"my_selected\" :selected=\"particle_params.texture\"/>\\\r\n            </div>\\\r\n        </div>\\\r\n    </div>\\\r\n    </div>',\n\n    components: {\n        'ParticlesProps': __WEBPACK_IMPORTED_MODULE_0__particles_props_js__[\"a\" /* Particles_Props */],\n        'texture-panel': __WEBPACK_IMPORTED_MODULE_1__texture_panel_js__[\"a\" /* Texture_Panel */]\n    }\n};\n\n//Vue.component(\"particles-panel\", Particles_Panel);\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Particles_Props; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__color_picker_js__ = __webpack_require__(0);\n\n\nvar Blending_Selector = {\n    props: {\n        \"blending\": {\n            type: String,\n            required: true,\n            default: \"no\"\n        }\n    },\n    template: '<select v-model=\"blending\" id=\"blending\" v-on:change=\"select\">\\\r\n            <option value=\"no\">no</option>\\\r\n            <option value=\"additive\">additive</option>\\\r\n            <option value=\"one_alpha\">one, minus src alpha</option>\\\r\n            <option value=\"alpha_one\">minus src alpha, one</option>\\\r\n            <option value=\"alpha\">alpha</option>\\\r\n        </select>',\n    methods: {\n        select: function (event) {\n            this.$emit(\"change\", this.blending);\n        }\n    }\n};\n\nvar Behavior = {\n    props: [\"affect_method\", \"emit_method\"],\n\n    data: function () {\n        return {\n            behavior: false\n        };\n    },\n\n    template: '<div>\\\r\n    <button type=\"button\" @click=\"show_behavior\">Show Behaviour</button>\\\r\n    <div class=\"behavior\" v-if=\"behavior\">\\\r\n    <p>affect method<br>\\\r\n    <textarea v-model=\"affect_method\"></textarea>\\\r\n    <p>emit method<br>\\\r\n    <textarea v-model=\"emit_method\"></textarea>\\\r\n    </div>',\n    methods: {\n        show_behavior: function (f) {\n            var behavior = !this.behavior;\n            this.behavior = behavior;\n        }\n    }\n\n};\n\nvar Particle_Params = {\n    props: {\n        \"params\": {\n            type: Object,\n            default: function () {\n                return {};\n            }\n        }\n    },\n\n    template: '<div @keyup.13=\"fire\">\\\r\n        <div class=\"prop-column\">\\\r\n            Life Length: <br/>\\\r\n            <input type=\"text\" id=\"life_length\" v-model.number=\"params.life_length\" type=\"number\" step=\"0.1\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Emit per second <br/>\\\r\n            <input type=\"text\" id=\"emit_per_second\" v-model.number=\"params.emit_per_second\" type=\"number\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Number of particles<br/>\\\r\n            <input type=\"text\" id=\"count\" v-model.number=\"params.count\" type=\"number\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Point Size<br/>\\\r\n            <input type=\"text\" id=\"size\" v-model.number=\"params.size\" type=\"number\" step=\"0.1\" />\\\r\n        </div>\\\r\n</div>',\n    methods: {\n        fire: function (event) {\n            this.$parent.fire(event);\n        }\n    }\n};\n\nvar Particles_Props = {\n    props: {\n        \"params\": {\n            type: Object,\n            default: function () {\n                return {};\n            }\n        }\n    },\n    template: '<div>  <particle-params :params=params />\\\r\n        <color-picker :value=\"params.color\" @input=\"update_color\"></color-picker>\\\r\n        <p>Blending mode</p>\\\r\n            <blending-mode :blending=params.blending @change=\"blending_change\"> </blending-mode>\\\r\n        <p>Precomputed alpha <input type=\"checkbox\" v-model=\"params.precomputed_alpha\" @change=\"fire\" id=\"pre_alpha\"></p>\\\r\n        <behavior :affect_method=params.affect_method :emit_method=params.emit_method />\\\r\n    <div>',\n\n    data: function () {\n        return {\n            behavior: false\n        };\n    },\n    watch: {\n        params: function () {\n            //console.log(\"change \", this.params.id);\n        }\n    },\n    methods: {\n        blending_change: function (event) {\n            this.params.blending = event;\n            this.emit_param_change(\"blending\", event);\n        },\n        emit_param_change: function (key, value) {\n            var params = {};\n            params[key] = value;\n            event_hub.$emit(\"change_params\", this.params.id, params);\n        },\n        fire: function (event) {\n            var value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n            this.emit_param_change(event.target.id, value);\n        },\n\n        update_color: function (event) {\n            event_hub.$emit('change_color', this.params.id, event);\n        }\n\n    },\n    components: {\n        'color-picker': __WEBPACK_IMPORTED_MODULE_0__color_picker_js__[\"a\" /* Color_Picker */],\n        'blending-mode': Blending_Selector,\n        'behavior': Behavior,\n        'particle-params': Particle_Params\n    }\n};\n\n//Vue.component(\"ParticlesProps\", Particles_Props);\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Texture_Panel; });\n\nvar Texture_Panel = {\n    template: '<div class=\"texture-panel\">\\\r\n            <div class=\"high-tools-panel\">\\\r\n            <select id=\"texture_select\" v-model=\"selected\" v-on:change=\"choose_texture\">\\\r\n            <option v-for=\"option in textures\" v-bind:value=\"option\">\\\r\n                {{ option }}\\\r\n            </option>\\\r\n            </select>\\\r\n            <button type=\"button\" v-on:click=\"apply\">apply</button>\\\r\n            </div>\\\r\n            <div class=\"texture-canvas\">\\\r\n            <canvas id=\"texture-canvas-obj\" class=\"texture-canvas\" ref=\"canvas\">\\\r\n            </canvas>\\\r\n            </div>\\\r\n            <div class=\"texture-info\">\\\r\n                Texture Format  {{format}} <br />\\\r\n                Texture Width {{texture_width}} Height {{texture_height}}\\\r\n            </div>\\\r\n            <div class=\"clear\" />\\\r\n        </div>',\n\n    //texture dictionaries, selected texture, object id, which selected texture\n    props: [\"textures\", \"selected\", \"object_id\"],\n\n    data: function () {\n        return {\n            selected_texture: '',\n            texture_width: 0,\n            texture_height: 0,\n            format: '',\n            panel_visible: false,\n            selected: ''\n        };\n    },\n\n    methods: {\n        show_panel: function (event) {\n            this.panel_visible = !this.panel_visible;\n        },\n        choose_texture: function (event) {\n            this.selected = event.target.value;\n            this.selected_texture = this.selected;\n            this.draw_texture(this.selected_texture);\n        },\n        apply: function () {\n            //console.log(\"apply of \", this.object_id, this.selected_texture);\n            event_hub.$emit(\"select_texture\", this.object_id, this.selected_texture);\n        },\n        draw_texture: function (name) {\n            if (!name) return;\n            var texture = event_hub.get_texture(name);\n            if (!texture) {\n                console.error(\"Oh, Fuck! Texture \" + name + \" not found!\");\n                return;\n            }\n            this.format = texture_format_to_string(texture.format);\n            var image = texture.image;\n            this.texture_width = image.naturalWidth || image.width;\n            this.texture_height = image.naturalHeight || image.height;\n\n            var canvas = this.$refs[\"canvas\"];\n            my_draw_image(canvas, image, 0, 0);\n        },\n\n        get_texture_from_particles: function (id) {\n            if (!id) {\n                return;\n            }\n            this.selected_texture = event_hub.get_texture_from_particles(id);\n            this.draw_texture(this.selected_texture);\n        }\n    },\n\n    mounted: function () {\n        this.get_texture_from_particles(this.object_id);\n        //console.log(\"mount of texture panel\", this.object_id, this.selected_texture, this.selected);\n        //print(\"<h3>Hi! I mounted and my texture is \" + this.selected_texture + \",\" + this.selected + \"</h3>\");\n    },\n\n    watch: {\n        object_id: function (value) {\n            this.get_texture_from_particles(value);\n        }\n    }\n\n};\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return create_vue_app; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__particles_panel_js__ = __webpack_require__(1);\n\n\nfunction create_vue_app(id) {\n\n  var app2 = new Vue({\n    el: id,\n\n    components: {\n      'particles-panel': __WEBPACK_IMPORTED_MODULE_0__particles_panel_js__[\"a\" /* Particles_Panel */]\n    },\n    data: {\n      particles: [],\n      textures: []\n    },\n    template: '<div id=\"app\">\\\r\n            <particles-panel :particles=\"particles\" :textures=\"textures\"></particles-panel>\\\r\n            </div>'\n  });\n\n  return app2;\n}\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gui_vueapp_js__ = __webpack_require__(4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"create_vue_app\", function() { return __WEBPACK_IMPORTED_MODULE_0__gui_vueapp_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gui_color_picker_js__ = __webpack_require__(0);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Color_Picker\", function() { return __WEBPACK_IMPORTED_MODULE_1__gui_color_picker_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__gui_texture_panel_js__ = __webpack_require__(3);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Texture_Panel\", function() { return __WEBPACK_IMPORTED_MODULE_2__gui_texture_panel_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gui_particles_props_js__ = __webpack_require__(2);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Particles_Props\", function() { return __WEBPACK_IMPORTED_MODULE_3__gui_particles_props_js__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__gui_particles_panel_js__ = __webpack_require__(1);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"Particles_Panel\", function() { return __WEBPACK_IMPORTED_MODULE_4__gui_particles_panel_js__[\"a\"]; });\n\n\n\n\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// editor.gui.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f013b1b4dd34c061c253","\r\nvar Color_Picker = {\r\n    props: {\r\n        value: {\r\n            type: Object,\r\n            default: function () {\r\n                return {r: 0, g: 0, b:0}\r\n            }\r\n        }\r\n    },\r\n    template: '<div>\\\r\n    <p>Red Green Blue Color\\\r\n    <p>\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.r\" ref=\"r\" id=\"r\" >\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.g\" ref=\"g\" id=\"g\">\\\r\n    <input type=\"range\" min=\"0\" max=\"255\" @change=\"changed\" :value=\"value.b\" ref=\"b\" id=\"b\">\\\r\n    </div>',\r\n    data: function () {\r\n        return {\r\n            new_value : {\r\n                r: 0,\r\n                g: 0,\r\n                b: 0\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        changed: function (event) {\r\n            this.value[event.target.id] = event.target.value;\r\n            this.$emit('input', this.value);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n//Vue.component(\"color-picker\", Color_Picker);\r\n\r\nexport {Color_Picker};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/gui/color_picker.js","import {Particles_Props} from './particles_props.js';\r\nimport {Texture_Panel} from './texture_panel.js';\r\n\r\nvar Particles_Panel = \r\n{\r\n    props: {\r\n        particles : {\r\n            type: Object,\r\n            default: function () { return []; },\r\n        },\r\n        textures : {\r\n            type: Object,\r\n            default: function () { return []; },\r\n        },\r\n        selected: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n\tdata: function () {\r\n    \r\n       \r\n       return  {\r\n                first_time: true,\r\n                particle_params: {},\r\n                my_selected : false,\r\n                texture_panel_is_visible: false,\r\n            };\r\n    },\r\n    methods:\r\n    {\r\n        add_to_select: function (id)\r\n        {\r\n            //console.log(\"select new \", id, this.particles);\r\n            this.particles.push(id);\r\n            this.my_selected = id;\r\n        },\r\n        create_particles: function ()\r\n        {\r\n            event_hub.$emit(\"create_particles\");\r\n        },\r\n\t\tremove_particles: function (event) \r\n\t\t{\r\n           event_hub.$emit(\"remove_particles\", this.my_selected);        \r\n\t\t\tfor(var i = 0; i < this.particles.length; i++) {\r\n\t\t\t\tif (this.particles[i] == this.my_selected) {\r\n\t\t\t\t\tthis.particles.splice(i, 1);\r\n                    //selecte next available particles or empty\r\n\t\t\t\t\tif (this.particles.length > 0) {\r\n                        if (i+ 1 < this.particles.length) {\r\n                            this.my_selected = this.particles[i+1];\r\n                        } else  {\r\n                            this.my_selected = this.particles[0];\r\n                        }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.my_selected = '';\r\n\t\t\t\t\t}\r\n                    \r\n                    break;\r\n\t\t\t\t}\r\n           }\r\n\t\t},\r\n        \r\n        change_colors: function (event)\r\n        {\r\n            event_hub.$emit(\"change_particles_color\", this.my_selected, event);\r\n        },\r\n        \r\n        show_texture_panel: function (event)\r\n        {\r\n            this.texture_panel_is_visible = !this.texture_panel_is_visible;\r\n            //console.log(\"this \", this.texture_panel_is_visible);\r\n        },\r\n        \r\n\t\tselect_particles: function (event)\r\n\t\t{\r\n            this.particle_params = event_hub.get_particle_params(this.my_selected);                  \r\n\t\t},\r\n\t\tplay: function (event)\r\n\t\t{\r\n            event_hub.$emit(\"replay\", this.my_selected, this.particle_params);\r\n\t\t},\r\n        \r\n    },\r\n    created: function ()\r\n    {\r\n    \r\n        var self = this;\r\n        event_hub.$on(\"adding_particles\", function (id)\r\n        {\r\n            self.add_to_select(id);\r\n        });\r\n    \r\n        if (!!this.selected) {\r\n            this.my_selected = this.selected;\r\n        } else {\r\n            if (this.particles.length > 0) {\r\n                this.my_selected = this.particles[0];\r\n            }\r\n        }\r\n        if (this.my_selected) {\r\n            this.particle_params = event_hub.get_particle_params(this.my_selected);        \r\n        }\r\n    },\r\n\r\n    watch: {\r\n        particles: function (arr) {\r\n            //console.log(\"watch particles\", arr);\r\n            if (this.particles.length > 0) {\r\n                if (this.first_time) {\r\n                    this.my_selected = this.particles[0];\r\n                    this.first_time = false;                            \r\n                }\r\n            }\r\n        },\r\n        my_selected: function (new_selected) \r\n        {\r\n            //console.log(\"watch new selected\", new_selected);\r\n            this.particle_params = event_hub.get_particle_params(this.my_selected);\r\n        }\r\n    },\r\n        \r\n    template: \r\n    '<div>\\\r\n\t<button type=\"button\" id=\"btn-add\" v-on:click=\"create_particles\">New</button>\\\r\n\t<br>\\\r\n\t<select v-model=\"my_selected\" id=\"object-list\" ref=\"particles_list\">\\\r\n\t\t<option disabled value=\"\">Please select one</option>\\\r\n\t  <option v-for=\"option in particles\" v-bind:value=\"option\">\\\r\n\t\t{{ option }}\\\r\n\t  </option>\\\r\n\t</select>\\\r\n\t<br>\\\r\n    <span>Selected: {{ my_selected }}</span><br>\\\r\n        <button type=\"button\" id=\"btn-play\" v-on:click=\"play\">Refresh</button>\\\r\n        <button type=\"button\" id=\"btn-remove\" v-on:click=\"remove_particles\">Remove</button>\\\r\n    <p>  <span class=\"info-panel\">Particles properties</span></p>\\\r\n    <div class=\"particles-properties\">\\\r\n        <div v-if=\"my_selected\" >\\\r\n            <ParticlesProps  :params=\"particle_params\" />\\\r\n            <a href=\"javascript:void(0)\" @click=\"show_texture_panel\">Show texture panel</a>\\\r\n            <div class=\"dummy\" v-if=\"texture_panel_is_visible\">\\\r\n            <texture-panel :textures=\"textures\" :object_id=\"my_selected\" :selected=\"particle_params.texture\"/>\\\r\n            </div>\\\r\n        </div>\\\r\n    </div>\\\r\n    </div>',\r\n   \r\n   \r\n    components: {\r\n        'ParticlesProps': Particles_Props,\r\n        'texture-panel': Texture_Panel,\r\n    },\r\n};\r\n\r\n\r\n//Vue.component(\"particles-panel\", Particles_Panel);\r\n\r\nexport {Particles_Panel};\n\n\n// WEBPACK FOOTER //\n// ./src/gui/particles_panel.js","import {Color_Picker} from './color_picker.js';\r\n\r\nvar Blending_Selector = {\r\n    props: {\r\n        \"blending\": {\r\n            type : String,\r\n            required: true,\r\n            default: \"no\"\r\n         },\r\n    },\r\n    template:\r\n        '<select v-model=\"blending\" id=\"blending\" v-on:change=\"select\">\\\r\n            <option value=\"no\">no</option>\\\r\n            <option value=\"additive\">additive</option>\\\r\n            <option value=\"one_alpha\">one, minus src alpha</option>\\\r\n            <option value=\"alpha_one\">minus src alpha, one</option>\\\r\n            <option value=\"alpha\">alpha</option>\\\r\n        </select>',\r\n    methods: {\r\n        select: function (event) {\r\n            this.$emit(\"change\", this.blending);\r\n        }\r\n    },\r\n};\r\n\r\nvar Behavior = {\r\n    props: [\"affect_method\", \"emit_method\"],\r\n    \r\n    data: function () {\r\n        return {\r\n            behavior: false\r\n        }\r\n    },\r\n\r\n    template: '<div>\\\r\n    <button type=\"button\" @click=\"show_behavior\">Show Behaviour</button>\\\r\n    <div class=\"behavior\" v-if=\"behavior\">\\\r\n    <p>affect method<br>\\\r\n    <textarea v-model=\"affect_method\"></textarea>\\\r\n    <p>emit method<br>\\\r\n    <textarea v-model=\"emit_method\"></textarea>\\\r\n    </div>',\r\n    methods: {\r\n        show_behavior: function(f) {\r\n            var behavior = !this.behavior;\r\n            this.behavior = behavior;\r\n        }\r\n    },\r\n\r\n};\r\n\r\nvar Particle_Params = \r\n{\r\n    props: {\r\n        \"params\": {\r\n            type: Object,\r\n            default: function () {\r\n                return {};\r\n            }\r\n        }\r\n    },\r\n\r\n    template: '<div @keyup.13=\"fire\">\\\r\n        <div class=\"prop-column\">\\\r\n            Life Length: <br/>\\\r\n            <input type=\"text\" id=\"life_length\" v-model.number=\"params.life_length\" type=\"number\" step=\"0.1\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Emit per second <br/>\\\r\n            <input type=\"text\" id=\"emit_per_second\" v-model.number=\"params.emit_per_second\" type=\"number\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Number of particles<br/>\\\r\n            <input type=\"text\" id=\"count\" v-model.number=\"params.count\" type=\"number\" />\\\r\n        </div>\\\r\n        <div class=\"prop-column\">\\\r\n            Point Size<br/>\\\r\n            <input type=\"text\" id=\"size\" v-model.number=\"params.size\" type=\"number\" step=\"0.1\" />\\\r\n        </div>\\\r\n</div>',\r\n    methods: {\r\n        fire: function (event) {\r\n            this.$parent.fire(event);\r\n        }\r\n    }\r\n};\r\n   \r\nvar Particles_Props = \r\n{\r\n    props: {\r\n        \"params\": {\r\n            type: Object,\r\n            default: function () {\r\n                return {};\r\n            }\r\n        }\r\n    },\r\n    template: '<div>  <particle-params :params=params />\\\r\n        <color-picker :value=\"params.color\" @input=\"update_color\"></color-picker>\\\r\n        <p>Blending mode</p>\\\r\n            <blending-mode :blending=params.blending @change=\"blending_change\"> </blending-mode>\\\r\n        <p>Precomputed alpha <input type=\"checkbox\" v-model=\"params.precomputed_alpha\" @change=\"fire\" id=\"pre_alpha\"></p>\\\r\n        <behavior :affect_method=params.affect_method :emit_method=params.emit_method />\\\r\n    <div>',\r\n    \r\n    data: function () {\r\n        return {\r\n            behavior: false\r\n        }\r\n    },\r\n    watch: {\r\n        params: function ()\r\n        {\r\n            //console.log(\"change \", this.params.id);\r\n        }\r\n    },\r\n    methods: {\r\n        blending_change: function (event) {\r\n            this.params.blending = event;\r\n            this.emit_param_change(\"blending\", event);\r\n        },\r\n        emit_param_change: function (key, value)\r\n        {\r\n            var params ={};\r\n            params[key] = value;\r\n            event_hub.$emit(\"change_params\", this.params.id, params);\r\n        },\r\n        fire: function (event)\r\n        {\r\n            var value = (event.target.type === 'checkbox') ? event.target.checked : event.target.value;\r\n            this.emit_param_change(event.target.id, value);\r\n        },\r\n        \r\n        update_color: function (event)\r\n        {\r\n            event_hub.$emit('change_color', this.params.id, event);\r\n        },\r\n    \r\n    },\r\n    components: {\r\n        'color-picker': Color_Picker,\r\n        'blending-mode': Blending_Selector,\r\n        'behavior': Behavior,\r\n        'particle-params': Particle_Params,\r\n    },\r\n};\r\n\r\n//Vue.component(\"ParticlesProps\", Particles_Props);\r\n\r\n\r\nexport {Particles_Props};\n\n\n// WEBPACK FOOTER //\n// ./src/gui/particles_props.js","\r\nvar Texture_Panel = \r\n{\r\n    template: \r\n        '<div class=\"texture-panel\">\\\r\n            <div class=\"high-tools-panel\">\\\r\n            <select id=\"texture_select\" v-model=\"selected\" v-on:change=\"choose_texture\">\\\r\n            <option v-for=\"option in textures\" v-bind:value=\"option\">\\\r\n                {{ option }}\\\r\n            </option>\\\r\n            </select>\\\r\n            <button type=\"button\" v-on:click=\"apply\">apply</button>\\\r\n            </div>\\\r\n            <div class=\"texture-canvas\">\\\r\n            <canvas id=\"texture-canvas-obj\" class=\"texture-canvas\" ref=\"canvas\">\\\r\n            </canvas>\\\r\n            </div>\\\r\n            <div class=\"texture-info\">\\\r\n                Texture Format  {{format}} <br />\\\r\n                Texture Width {{texture_width}} Height {{texture_height}}\\\r\n            </div>\\\r\n            <div class=\"clear\" />\\\r\n        </div>',\r\n\r\n        //texture dictionaries, selected texture, object id, which selected texture\r\n    props: [\"textures\", \"selected\", \"object_id\"],\r\n    \r\n    data: function () {\r\n        return {\r\n            selected_texture: '',\r\n            texture_width : 0,\r\n            texture_height : 0,\r\n            format : '',\r\n            panel_visible: false,\r\n            selected: '',\r\n        }\r\n    },\r\n    \r\n    methods: {\r\n        show_panel: function (event)\r\n        {\r\n            this.panel_visible = !this.panel_visible;\r\n        },\r\n        choose_texture: function(event)\r\n        {\r\n            this.selected = event.target.value;\r\n            this.selected_texture = this.selected;\r\n            this.draw_texture(this.selected_texture);\r\n        },\r\n        apply: function ()\r\n        {\r\n            //console.log(\"apply of \", this.object_id, this.selected_texture);\r\n            event_hub.$emit(\"select_texture\", this.object_id, this.selected_texture);\r\n        },\r\n        draw_texture: function (name)\r\n        {\r\n            if (!name) return;\r\n            var texture = event_hub.get_texture(name);\r\n            if (!texture) {\r\n                console.error(\"Oh, Fuck! Texture \" + name + \" not found!\");\r\n                return;\r\n            }\r\n            this.format = texture_format_to_string(texture.format);\r\n            var image = texture.image;\r\n            this.texture_width = image.naturalWidth || image.width;\r\n            this.texture_height = image.naturalHeight || image.height;\r\n            \r\n            var canvas = this.$refs[\"canvas\"];\r\n            my_draw_image(canvas, image, 0, 0);\r\n        },\r\n        \r\n        get_texture_from_particles: function (id)\r\n        {\r\n            if (!id) {\r\n                return;\r\n            }\r\n            this.selected_texture = event_hub.get_texture_from_particles(id);\r\n            this.draw_texture(this.selected_texture);\r\n        }\r\n    },\r\n\r\n    mounted: function () {\r\n      this.get_texture_from_particles(this.object_id);\r\n      //console.log(\"mount of texture panel\", this.object_id, this.selected_texture, this.selected);\r\n      //print(\"<h3>Hi! I mounted and my texture is \" + this.selected_texture + \",\" + this.selected + \"</h3>\");\r\n    },\r\n\r\n    \r\n    watch: {\r\n        object_id: function (value) { \r\n           this.get_texture_from_particles(value);\r\n         },\r\n    },\r\n   \r\n    \r\n};\r\n\r\n\r\n\r\n\r\nexport {Texture_Panel};\n\n\n// WEBPACK FOOTER //\n// ./src/gui/texture_panel.js","import {Particles_Panel} from './particles_panel.js';\r\n\r\nfunction create_vue_app(id) {\r\n\r\n\tvar app2 = new Vue({\r\n\t\tel: id,\r\n        \r\n        components: {\r\n            'particles-panel': Particles_Panel,\r\n        },\r\n\t\tdata: {\r\n            particles: [],\r\n            textures: [],\r\n        },\r\n        template: '<div id=\"app\">\\\r\n            <particles-panel :particles=\"particles\" :textures=\"textures\"></particles-panel>\\\r\n            </div>',\r\n\t});\r\n\r\n\treturn app2;\r\n}\r\n\r\nexport {create_vue_app};\n\n\n// WEBPACK FOOTER //\n// ./src/gui/vueapp.js","export {create_vue_app} from './gui/vueapp.js';\r\nexport {Color_Picker} from './gui/color_picker.js';\r\nexport {Texture_Panel} from './gui/texture_panel.js';\r\nexport {Particles_Props} from './gui/particles_props.js';\r\nexport {Particles_Panel} from './gui/particles_panel.js';\n\n\n// WEBPACK FOOTER //\n// ./src/gui_main_webpack.js"],"sourceRoot":""}